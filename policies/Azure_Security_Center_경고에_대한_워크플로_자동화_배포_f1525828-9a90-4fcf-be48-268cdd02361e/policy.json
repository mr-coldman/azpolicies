{
 "properties": {
  "displayName": "Azure Security Center 경고에 대한 워크플로 자동화 배포",
  "policyType": "BuiltIn",
  "mode": "All",
  "description": "Azure Security Center 경고 자동화를 사용합니다. 이 정책은 지정된 범위에 대한 조건 및 트리거를 사용하여 워크플로 자동화를 배포합니다. 새로 만든 구독에 이 정책을 배포하려면 [규정 준수] 탭을 열고 관련 비규격 할당을 선택한 후 수정 작업을 만드세요.",
  "metadata": {
   "version": "4.0.0",
   "category": "Security Center"
  },
  "parameters": {
   "automationName": {
    "type": "String",
    "metadata": {
     "displayName": "자동화 이름",
     "description": "자동화 이름입니다."
    }
   },
   "resourceGroupName": {
    "type": "String",
    "metadata": {
     "displayName": "리소스 그룹 이름",
     "description": "워크플로 자동화가 생성되는 리소스 그룹 이름입니다. 존재하지 않는 리소스 그룹의 이름을 입력하면 구독에서 만들어집니다."
    }
   },
   "resourceGroupLocation": {
    "type": "String",
    "metadata": {
     "displayName": "리소스 그룹 위치",
     "description": "리소스 그룹과 워크플로 자동화가 생성되는 위치입니다.",
     "strongType": "location"
    }
   },
   "createResourceGroup": {
    "type": "Boolean",
    "metadata": {
     "displayName": "리소스 그룹 만들기",
     "description": "범위에 리소스 그룹이 없으면 새 리소스 그룹이 생성됩니다. 리소스 그룹이 존재하고 이 플래그가 'true'로 설정되면 정책이 리소스 그룹을 다시 배포합니다. 이렇게 하면 리소스 그룹의 모든 Azure 태그가 다시 설정됩니다."
    },
    "allowedValues": [
     true,
     false
    ],
    "defaultValue": true
   },
   "alertName": {
    "type": "String",
    "metadata": {
     "displayName": "경고 이름에 다음 포함",
     "description": "필요한 경고 이름에 포함된 문자열입니다. Security Center 경고의 전체 참조 목록은 https://docs.microsoft.com/azure/security-center/alerts-reference를 참조하세요."
    },
    "defaultValue": ""
   },
   "alertSeverities": {
    "type": "Array",
    "metadata": {
     "displayName": "경고 심각도",
     "description": "경고 심각도를 확인합니다. 예: 높음;중간;낮음;"
    },
    "allowedValues": [
     "High",
     "Medium",
     "Low"
    ],
    "defaultValue": [
     "High",
     "Medium",
     "Low"
    ]
   },
   "logicAppResourceId": {
    "type": "String",
    "metadata": {
     "displayName": "논리 앱",
     "description": "트리거되는 논리 앱입니다.",
     "strongType": "Microsoft.Logic/workflows",
     "assignPermissions": true
    }
   },
   "logicAppTrigger": {
    "type": "String",
    "metadata": {
     "displayName": "논리 앱 트리거",
     "description": "트리거되는 논리 앱의 트리거 커넥터입니다. 가능한 값: '수동(수신 HTTP 요청)', 'Azure Security Center 경고가 만들어지거나 트리거된 경우'."
    },
    "allowedValues": [
     "Manual (Incoming HTTP request)",
     "When an Azure Security Center Alert is created or triggered"
    ]
   }
  },
  "policyRule": {
   "if": {
    "field": "type",
    "equals": "Microsoft.Resources/subscriptions"
   },
   "then": {
    "effect": "deployIfNotExists",
    "details": {
     "type": "Microsoft.Security/automations",
     "name": "[parameters('automationName')]",
     "existenceScope": "resourcegroup",
     "ResourceGroupName": "[parameters('resourceGroupName')]",
     "deploymentScope": "subscription",
     "roleDefinitionIds": [
      "/providers/microsoft.authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"
     ],
     "existenceCondition": {
      "allOf": [
       {
        "field": "Microsoft.Security/automations/isEnabled",
        "equals": true
       },
       {
        "field": "Microsoft.Security/automations/sources[*].ruleSets[*].rules[*].expectedValue",
        "in": "[union(parameters('alertSeverities'),if(equals(parameters('alertName'), ''), array('3.'), array(parameters('alertName'))))]"
       },
       {
        "field": "Microsoft.Security/automations/sources[*].ruleSets[*].rules[*].propertyJPath",
        "in": "[union(array('Severity'),if(equals(parameters('alertName'), ''), array('Version'), array('AlertDisplayName')))]"
       },
       {
        "count": {
         "value": "[parameters('alertSeverities')]",
         "name": "alertSeverity",
         "where": {
          "count": {
           "field": "Microsoft.Security/automations/sources[*].ruleSets[*].rules[*]",
           "where": {
            "allOf": [
             {
              "field": "Microsoft.Security/automations/sources[*].ruleSets[*].rules[*].propertyJPath",
              "equals": "Severity"
             },
             {
              "field": "Microsoft.Security/automations/sources[*].ruleSets[*].rules[*].expectedValue",
              "equals": "[current('alertSeverity')]"
             }
            ]
           }
          },
          "equals": 1
         }
        },
        "equals": "[length(parameters('alertSeverities'))]"
       }
      ]
     },
     "deployment": {
      "location": "westeurope",
      "properties": {
       "mode": "incremental",
       "template": {
        "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
        "contentVersion": "1.0.0.0",
        "parameters": {
         "automationName": {
          "type": "string"
         },
         "resourceGroupName": {
          "type": "string"
         },
         "resourceGroupLocation": {
          "type": "string"
         },
         "createResourceGroup": {
          "type": "bool"
         },
         "alertName": {
          "type": "string"
         },
         "alertSeverities": {
          "type": "array"
         },
         "logicAppResourceId": {
          "type": "string"
         },
         "logicAppTrigger": {
          "type": "string"
         },
         "guidValue": {
          "type": "string",
          "defaultValue": "[newGuid()]"
         }
        },
        "variables": {
         "scopeDescription": "scope for subscription {0}",
         "alertSeveritiesLength": "[length(parameters('alertSeverities'))]",
         "alertSeveritiesLengthIfEmpty": "[if(equals(variables('alertSeveritiesLength'), 0), 1, variables('alertSeveritiesLength'))]",
         "severityMap": {
          "High": "high",
          "Medium": "medium",
          "Low": "low"
         },
         "triggerMap": {
          "Manual (Incoming HTTP request)": "manual",
          "When an Azure Security Center Alert is created or triggered": "When_an_Azure_Security_Center_Alert_is_created_or_triggered"
         }
        },
        "resources": [
         {
          "condition": "[parameters('createResourceGroup')]",
          "name": "[parameters('resourceGroupName')]",
          "type": "Microsoft.Resources/resourceGroups",
          "apiVersion": "2019-10-01",
          "location": "[parameters('resourceGroupLocation')]"
         },
         {
          "type": "Microsoft.Resources/deployments",
          "apiVersion": "2019-10-01",
          "name": "[concat('nestedAutomationDeployment', '_', parameters('guidValue'))]",
          "resourceGroup": "[parameters('resourceGroupName')]",
          "dependsOn": [
           "[resourceId('Microsoft.Resources/resourceGroups/', parameters('resourceGroupName'))]"
          ],
          "properties": {
           "mode": "Incremental",
           "template": {
            "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
            "contentVersion": "1.0.0.0",
            "parameters": {},
            "variables": {},
            "resources": [
             {
              "tags": {},
              "apiVersion": "2019-01-01-preview",
              "location": "[parameters('resourceGroupLocation')]",
              "name": "[parameters('automationName')]",
              "type": "Microsoft.Security/automations",
              "dependsOn": [],
              "properties": {
               "description": "Workflow Automation for Azure Security Center alerts via policy",
               "isEnabled": true,
               "scopes": [
                {
                 "description": "[replace(variables('scopeDescription'),'{0}', subscription().subscriptionId)]",
                 "scopePath": "[subscription().id]"
                }
               ],
               "sources": [
                {
                 "eventSource": "Alerts",
                 "copy": [
                  {
                   "name": "ruleSets",
                   "count": "[variables('alertSeveritiesLengthIfEmpty')]",
                   "input": {
                    "rules": [
                     {
                      "propertyJPath": "[if(equals(parameters('alertName'), ''), 'Version', 'AlertDisplayName')]",
                      "propertyType": "string",
                      "expectedValue": "[if(equals(parameters('alertName'), ''), '3.', parameters('alertName'))]",
                      "operator": "Contains"
                     },
                     {
                      "propertyJPath": "Severity",
                      "propertyType": "string",
                      "expectedValue": "[variables('severityMap')[parameters('alertSeverities')[mod(copyIndex('ruleSets'), variables('alertSeveritiesLengthIfEmpty'))]]]",
                      "operator": "Equals"
                     }
                    ]
                   }
                  }
                 ]
                }
               ],
               "actions": [
                {
                 "actionType": "LogicApp",
                 "logicAppResourceId": "[parameters('logicAppResourceId')]",
                 "uri": "[listCallbackUrl(concat(parameters('logicAppResourceId'), '/triggers/', variables('triggerMap')[parameters('logicAppTrigger')]),'2016-06-01').value]"
                }
               ]
              }
             }
            ]
           }
          }
         }
        ]
       },
       "parameters": {
        "automationName": {
         "value": "[parameters('automationName')]"
        },
        "resourceGroupName": {
         "value": "[parameters('resourceGroupName')]"
        },
        "resourceGroupLocation": {
         "value": "[parameters('resourceGroupLocation')]"
        },
        "createResourceGroup": {
         "value": "[parameters('createResourceGroup')]"
        },
        "alertName": {
         "value": "[parameters('alertName')]"
        },
        "alertSeverities": {
         "value": "[parameters('alertSeverities')]"
        },
        "logicAppResourceId": {
         "value": "[parameters('logicAppResourceId')]"
        },
        "logicAppTrigger": {
         "value": "[parameters('logicAppTrigger')]"
        }
       }
      }
     }
    }
   }
  }
 },
 "id": "/providers/Microsoft.Authorization/policyDefinitions/f1525828-9a90-4fcf-be48-268cdd02361e",
 "type": "Microsoft.Authorization/policyDefinitions",
 "name": "f1525828-9a90-4fcf-be48-268cdd02361e"
}